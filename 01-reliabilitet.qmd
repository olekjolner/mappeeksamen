

# Assignment 1: Reliability and tools for reproducible data science {#assignment1}


## Detailed protocol
### Utstyr som ble benyttet 

 - Biosen (for måling av laktat) 
    - lansett finger
    - rør for oppsamling av blod
    - blandingscontainer for rør med blod
    - papir for å tørke av finger
 - Vyntus (for måling av metabolsk respons)
    - miksekammer
    - slange fra miksekammer til munnstykke
    - neseklype (teipbit på nese for at neseklype skulle sitte godt)
    - gassbeholder med standardgass
 - Lode-sykkel
    - Samme oppsett på sykkel ved hver test (høyde sete, avtsand sete til styre, osv.). Oppsettet lagres på data etter innstilling ved t1.
    - MTB pedaler
    - 172,5 mm lengde krankarmer
 - Gulvvifte (samme instilling ved hver test)
 - Pulsbelte garmin
 - Hansker
 - Labfrakk
 - Cydex for desinfisering av munnstykke og neseklype
 - Bøtte med såpevann for å vaske av cydex
 
 

## Preperations of participant being tested
  - Informasjon fra testansvarlig til testdeltaker vedrørende hvordan     test skal gjennomføres:
      - VO2max test der vi starter på en gitt watt (motstand). Watten vil øke hvert minutt (hvor mye avhenger av protokoll) og testdeltaker sykler helt til han/hun ikke greier mer. 
      - Test avsluttes dersom tråkkfrekvens < 60 rpm. 
      - Test skal gjennomføres sittende
      - Borg skala benyttes når utmattelse inntreffer hos testdeltaker. Deltaker vil bli spurt om å gi et tall fra 6-20 på hvor sliten han/hun er, der 6 er "ingen anstrengelse" og 20 er "maksimal anstrengelse". 
      - Underveis i test vil testdeltaker ha tilgang på hvor lenge han/hun har syklet. 
      - Testdeltaker informeres om at testleder kun vil informere om hvor lenge det er til neste økning og hvilken watt som sykles på for øyeblikket. Annen data som puls, VO2, osv., vil ikke utøver ha tilgang på underveis i test. 
      - Testleder vil mot slutten av test bidra til å pushe testdeltaker slik at han/hun får ut sitt ytterste. Hvordan denne "pushingen" gjennomføres vil variere fra testleder til testleder. Det viktige er at testleder oppfører seg tilnærmet likt ved hver test ovenfor den aktuelle testdeltaker. 
      
    

## Standardization of test
 - Matinntak: 
    - siste store måltid senest 2 timer før teststart. Tillatt å spise èn mindre karbohydratkilde senest 30 min før test, dvs. èn banan, èn bar, èn gel, osv. 
 - Koffeininntak: 
    - inntak som normalt. 
 - Test gjennomføres på samme tidspunkt på dagen ved alle tester
 - Søvn/døgnrytme: 
    - forsøk å opprettholde normal døgnrytme gjennom testperioden. 
 - Trening: 
    - ingen hard trening på underkropp dagen før test. 
 - Oppvarmingsprotokoll: 
    - 5 min oppvamring (2 min 150W, 2 min 175W, 1 min 220W)
 - Samme testprotokoll ved alle testene: 
    - start på 200W - 20W økning hvert minutt til utmattelse. 
 
 
 

## Post test data preperation

   

  
```{r}
#| message: false
#| echo: false

library(readxl)
library(tidyverse)
library(gt)
library(magrittr)

df <- read_xlsx("plot_data_gr4.xlsx")

```




```{r}
#| echo: false
#| tbl-cap: "Data from reliability tests sorted by id and timepoint"
#| message: false
#| warning: false

df %>% 
  # velger de variablene jeg ønsker å ha med fra datasettet
  select(id, timepoint, weight, w.max, vo2.max, vco2.max, rer.max, ve.max, bf.max, hr.max, la.max, borg.max) %>% 
  # hr.max og la.max var <chr>, så gjør om de til <dbl>
  
  mutate(hr.max = as.numeric(hr.max)) %>% 
  mutate(la.max = as.numeric(la.max)) %>% 
  
  #formaterer tbl slik at 
  pivot_longer(names_to = "variables", 
               values_to = "values", 
               cols = weight:borg.max) %>% 
  
  
  group_by(id, timepoint, variables) %>% 
  
  mutate(id_timep = paste(id, timepoint, sep = "_")) %>% 
  
  ungroup() %>% 
  
  select(-id, -timepoint) %>% 
  
  pivot_wider(names_from = id_timep, 
              values_from = values) %>% 
  
gt() %>% 
  
  tab_spanner(label = "id13", columns = c("id13_t1", "id13_t2", "id13_t3")) %>% 

tab_spanner(label = "id14", columns = c("id14_t1", "id14_t2", "id14_t3")) %>% 
  
  tab_spanner(label = "id15", columns = c("id15_t1", "id15_t2")) %>% 
  
  tab_spanner(label = "id16", columns = c("id16_t1", "id16_t2")) %>% 

cols_label(variables = " ", 
           id13_t1 = "t1", 
           id13_t2 = "t2", 
           id13_t3 = "t3", 
           id14_t1 = "t1", 
           id14_t2 = "t2", 
           id14_t3 = "t3", 
           id15_t1 = "t1", 
           id15_t2 = "t2", 
           id16_t1 = "t1", 
           id16_t2 = "t2")
```





```{r}
#| echo: false
#| warning: false

ggplot(data = df, 
       aes(weight, 
           w.max, 
           color = id, 
           shape = id)) +
  geom_point() +
  
  facet_wrap(~timepoint)

```


