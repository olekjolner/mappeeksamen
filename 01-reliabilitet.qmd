# Assignment 1: Reliability and tools for reproducible data science {#assignment1}

### Utstyr som ble benyttet

-   Biosen (for måling av laktat)
    -   lansett finger
    -   rør for oppsamling av blod
    -   blandingscontainer for rør med blod
    -   papir for å tørke av finger
-   Vyntus (for måling av metabolsk respons)
    -   miksekammer
    -   turbin
    -   slange fra miksekammer til munnstykke
    -   neseklype (teipbit på nese for at neseklype skulle sitte godt)
    -   gassbeholder med referansegass
-   Lode-sykkel
    -   Samme oppsett på sykkel ved hver test (høyde sete, avtsand sete til styre, osv.). Oppsettet lagres på data etter innstilling ved t1.
    -   MTB pedaler
    -   172,5 mm lengde krankarmer
-   Gulvvifte (samme instilling ved hver test)
-   Pulsbelte garmin
-   Hansker
-   Minnepenn for overføring av data



## Metode

### Preparations of participant being tested

-   Informasjon fra testansvarlig til testdeltaker vedrørende hvordan test skal gjennomføres:
    -   VO2max test der vi starter på en gitt watt (motstand). Watten vil øke hvert minutt (hvor mye avhenger av protokoll) og testdeltaker sykler helt til han/hun ikke greier mer.
    -   Test avsluttes dersom tråkkfrekvens \< 60 rpm.
    -   Test skal gjennomføres sittende
    -   Borg skala benyttes når utmattelse inntreffer hos testdeltaker. Deltaker vil bli spurt om å gi et tall fra 6-20 på hvor sliten han/hun er, der 6 er "ingen anstrengelse" og 20 er "maksimal anstrengelse".
    -   Underveis i test vil testdeltaker ha tilgang på hvor lenge han/hun har syklet.
    -   Testdeltaker informeres om at testleder kun vil informere om hvor lenge det er til neste økning og hvilken watt som sykles på for øyeblikket. Annen data som puls, VO2, osv., vil ikke utøver ha tilgang på underveis i test.
    -   Testleder vil mot slutten av test bidra til å pushe testdeltaker slik at han/hun får ut sitt ytterste. Hvordan denne "pushingen" gjennomføres vil variere fra testleder til testleder. Det viktige er at testleder oppfører seg tilnærmet likt ved hver test ovenfor den aktuelle testdeltaker.


## Metode - gjennomføring av VO^2^max test

### Forberedelse og kalibrering av utstyr

1. Sørg for at Biosen er på, og at det er nok væske i kalibreringssolution (rød flaske). Sett igang kalibrering av Biosen om det er nødvendig. 
2. Ta med nødvendig laktatutstyr bort til sykkelen, herunder: lansett, rør for oppsamling av blod og papir.
3. Kalibrering av Vyntus CPX
    a. Skru på kalibreringsgassen.
    b. Se til at turbin er koblet til sampling slange og optoelektronisk måler. 
    c. Koble til kalibreringsporten på CPX-en og kjør både volum- og gasskalibrering.
    OBS! Ved differanse på over 2% under volumkalibrering eller differanse over 0.2% differanse under gasskalibrering, gjennomfør nødvendig feilsøking og kjør kalibrering på nytt.  
4. Ta på hansker og sett sammen munnstykke. Dekk til munnstykket med papir med hjelp av neseklype. 
5. Ta med munnstykke og slange bort til sykkel og Vyntus CPX. Fest munnstykke til slange, og slange til miksekammer. 
6. Legg til ny eller velg aktuell testdeltager.
     a. Ny testdeltager legges til, og følgende ID-informasjon legges til under fornavn, etternavn og personnummer: idr4000_h24_gr4_idxx (xx=nr).
 
### Forberedelse av testdeltager
 
  - Informasjon fra testansvarlig til testdeltaker vedrørende hvordan test skal gjennomføres:
      - VO2max test der vi starter på en gitt watt (motstand). Watten vil øke hvert minutt (hvor mye avhenger av protokoll) og testdeltaker sykler helt til han/hun ikke greier mer. 
      - Test avsluttes dersom tråkkfrekvens < 60 rpm. 
      - Test skal gjennomføres sittende
      - Borg skala benyttes når utmattelse inntreffer hos testdeltaker. Deltaker vil bli spurt om å gi et tall fra 6-20 på hvor sliten han/hun er, der 6 er "ingen anstrengelse" og 20 er "maksimal anstrengelse". 
      - Underveis i test vil testdeltaker ha tilgang på hvor lenge han/hun har syklet. 
      - Testdeltaker informeres om at testleder kun vil informere om hvor lenge det er til neste økning og hvilken watt som sykles på for øyeblikket. Annen data som puls, VO2, osv., vil ikke utøver ha tilgang på underveis i test. 
      - Testleder vil mot slutten av test bidra til å pushe testdeltaker slik at han/hun får ut sitt ytterste. Hvordan denne "pushingen" gjennomføres vil variere fra testleder til testleder. Det viktige er at testleder oppfører seg tilnærmet likt ved hver test ovenfor den aktuelle testdeltaker. 
      

### Når testdeltaker er ferdig å sykle

-   Testleder har nå spurt om Borgs skala
-   Etter 1 min tas en laktatprøve av testdeltaker for å estimere la.max. Prøver plasseres i beger med løsning før den vendes og plasseres i Biosen for måling.
-   Noterer ned hvor lenge deltaker syklet og henter så ut resten av data fra test via rapport på vyntus.
-   Data som er hentet ut er formatert i excel. Deretter benyttet vi read_xlsx for å importere datafilen til R.

### Standardization of test

-   Matinntak:
    -   siste store måltid senest 2 timer før teststart. Tillatt å spise èn mindre karbohydratkilde senest 30 min før test, dvs. èn banan, èn bar, èn gel, osv.
-   Koffeininntak:
    -   inntak som normalt.
-   Test gjennomføres på samme tidspunkt på dagen ved alle tester
-   Søvn/døgnrytme:
    -   forsøk å opprettholde normal døgnrytme gjennom testperioden.
-   Trening:
    -   ingen hard trening på underkropp dagen før test.
-   Oppvarmingsprotokoll:
    -   5 min oppvamring (2 min 150W, 2 min 175W, 1 min 220W)
-   Samme testprotokoll ved alle testene:
    -   start på 200W - 20W økning hvert minutt til utmattelse.

## Tabeller og grafer som først ble laget med kun datasett fra gruppe 4

```{r}
#| message: false
#| echo: false

library(readxl)
library(tidyverse)
library(gt)
library(magrittr)

df <- read_xlsx("plot_data_gr4.xlsx")

```

```{r}
#| echo: false
#| label: Tabell med oversikt over all data fra alle id'er
#| tbl-cap: "Data from reliability tests sorted by id and timepoint"
#| message: false
#| warning: false

df %>% 
  # velger de variablene jeg ønsker å ha med fra datasettet
  select(id, timepoint, weight, w.max, vo2.max, vco2.max, rer.max, ve.max, bf.max, hr.max, la.max, borg.max) %>% 
  # hr.max og la.max var <chr>, så gjør om de til <dbl>
  
  mutate(hr.max = as.numeric(hr.max)) %>% 
  mutate(la.max = as.numeric(la.max)) %>% 
  
  #formaterer tbl slik at karakterene weight:borg.max samles i èn kolonne og tilhørende verdier ved siden i en egen kolonne.
  pivot_longer(names_to = "variables", 
               values_to = "values", 
               cols = weight:borg.max) %>% 
  
  # gruperer etter id, timepoint og variables
  group_by(id, timepoint, variables) %>% 
  
  # slår sammen karakterene id og timepoint
  mutate(id_timep = paste(id, timepoint, sep = "_")) %>% 
  
  # fjerner grupering
  ungroup() %>% 
  
  # fjerner is og timepoint siden de nå er slått sammen til id_timep
  select(-id, -timepoint) %>% 
  
  #ordner tabell så variabler weight:borg.max havner lengst til ve og id_timep får hver sin kolonne
  pivot_wider(names_from = id_timep, 
              values_from = values) %>% 
  
  # printer tabell i "viewer"
gt() %>% 
  
  # lager egen kolonneoverskrift for å sortere de ulike id'ene
  tab_spanner(label = "id13", columns = c("id13_t1", "id13_t2", "id13_t3")) %>% 

tab_spanner(label = "id14", columns = c("id14_t1", "id14_t2", "id14_t3", "id14_t4")) %>% 
  
  tab_spanner(label = "id15", columns = c("id15_t1", "id15_t2", "id15_t3")) %>% 
  
  tab_spanner(label = "id16", columns = c("id16_t1", "id16_t2")) %>% 

  #endrer navn på kolonnene
cols_label(variables = " ", 
           id13_t1 = "t1", 
           id13_t2 = "t2", 
           id13_t3 = "t3", 
           id14_t1 = "t1", 
           id14_t2 = "t2", 
           id14_t3 = "t3",
           id14_t4 = "t4",
           id15_t1 = "t1", 
           id15_t2 = "t2",
           id15_t3 = "t3",
           id16_t1 = "t1", 
           id16_t2 = "t2") %>% 
  
  fmt_number(decimals = 2) %>% 
  
  tab_options(table.font.size = 9)

  
```

```{r}
#| echo: false
#| label: Tabell med gj.snitt og std verdier sortert etter id
#| tbl-cap: "Table sorted by id. All numbers are mean (sd)"
#| warning: false
#| message: false

df %>% 
  select(id, timepoint, weight, w.max:borg.max) %>% 
  
  mutate(rel.vo2max = vo2.max / weight) %>% 
  mutate(rel.wmax = w.max / weight) %>% 
  
  pivot_longer(names_to = "names", 
               values_to = "tall", 
               cols = w.max:rel.wmax) %>% 
  
  group_by(id, names) %>% 
  
  summarise(m = mean(tall), 
            s = sd(tall)) %>% 
  
  mutate(m_s = paste0(signif(m, 3), " (", signif(s, 2), ")")) %>% 
  
  ungroup() %>%
  
  select(-m, -s,) %>% 
  
  pivot_wider(names_from = "id", 
              values_from = m_s) %>% 
   
  gt() %>% 
  
   cols_label(names = " ")
  
  
```


### Plot: sammenheng mellom w.max og vekt 

```{r}
#| echo: false
#| warning: false
#| label: Graf med relasjon mellom vekt og watt-max
#| tbl-cap: "Relation between weight and w.max."
#| message: false

ggplot(data = df, 
       aes(weight, 
           w.max, 
           color = id, 
           shape = id)) +
  geom_point() +
  
  labs(x = "Vekt (kg)", 
       y = "Watt max (W)", 
       color = "ID", 
       shape = "ID", 
       subtitle = "Sammenheng mellom watt-max og vekt",
       caption = "Antall tester/id: ID13=3, ID14=4, ID15=3, ID16=2")

```

### Te og cv for la.max sett mellom t1 og t2 

```{r}
#| echo: false
#| label: beregning av typical error og te som prosent av gjennomsnitt for verdi la.max
#| message: false
#| warning: false

df |> 
  select(id, timepoint, la.max) |> 
  
  pivot_wider(names_from = timepoint, 
              values_from = la.max) |> 
  
  mutate(diff = t2 - t1) |> 
  
  summarise(m = mean(c(t1, t2), na.rm = TRUE), 
            s = sd(diff, na.rm = TRUE), 
            te = s / sqrt(2), 
            cv = 100 * (te/m)) |> 
  
  gt() |> 
  
  fmt_number(decimals = 2) |> 
  
  tab_footnote(footnote = "m = gj.snitt (W), s = standardavvik, te = typical error, cv = coefficient of variation (%)")

```

## Tabeller og plots med datasett fra alle gruppene

```{r}
#| message: false
#| echo: false
#| warning: false

library(readxl)
library(tidyverse)
library(gt)
library(magrittr)

df_all <- read_xlsx("plot_data_all_gr.xlsx") |> 
  mutate(w.max = as.numeric(w.max), 
         la.max = as.numeric(la.max), 
         hr.max = as.numeric(hr.max), 
         rer.max = as.numeric(rer.max))
  
```

### Plot

```{r}
#| warning: false
#| message: false
#| echo: false
#| label: plot av vo2.max og w.max

ggplot(data = df_all, 
      aes(vo2.max, 
          w.max, 
          color = age)) +
  geom_point() +
  
  labs(subtitle = "Sammenheng mellom vo2.max, w.max og alder")

```

### Tabeller

```{r}
#| warning: false
#| message: false
#| echo: false
#| tbl-cap: "Verdier er gj.snitt og standardavvik for de ulike testtidspunktene"
#| label: snitt og standardavvik for verider w.max og vo2.max per id

df_all |> 
  select(id, timepoint, w.max, vo2.max) |> 
  
  pivot_longer(names_to = "names", 
               values_to = "tall", 
               cols = w.max:vo2.max) |> 
  
  summarise(.by = c(timepoint, names), 
            m = mean(tall, na.rm = TRUE), 
            sd = sd(tall, na.rm = TRUE)) |> 
  
  mutate(m_sd = paste0(signif(m, 3), " (", signif(sd, 3),") ")) |> 
  
  ungroup() |> 
  
  select(-m, -sd) |> 
  
  pivot_wider(names_from = names, 
              values_from = m_sd) |> 
  
  gt()

```

### Beregning av reliabilitet

```{r}
#| warning: false
#| message: false
#| echo: false
#| tbl-cap: "Sammenlikner t1 og t2 og ser på gj.snittsverdi, standardavvik, typical error og coefficient of variation av variabelen w.max"
#| label: mean, sd, te og cv for w.max verdien

df_all |> 
  
  #velger de variablene vi ønsker å se på
  select(id, timepoint, w.max) |> 
  
  # benytter pivot_wider for lage !tidy-data, nå ser vi eks id_01 sin w.max ved timepoint == t1 osv.
  pivot_wider(names_from = timepoint, 
              values_from = w.max) |> 
  
#så vil vi se på typical error og regne på reliabilitet. Muterer så vi får en verdi som er differansen mellom t2 og t1
  mutate(diff = t2 - t1) |> 
  
  #summarise tar veridene i kolonnene til t1 og t2 og regner snittet av de, samt standardavviket
  summarise(m = mean(c(t1, t2), na.rm = TRUE), 
            s = sd(diff, na.rm = TRUE), 
            te = s / sqrt(2), 
            cv = te/m * 100) |> 
  
  gt() |> 
  
  fmt_number(decimals = 2)
  
# får da at mean = 331W og sd = 12,6. Typical error i dette tilfellet ble 8,90 og cv (coefficient of variation) er 2,69 %. 

```

```{r}
#| echo: false

cv_perc <- 2.69
```


Ifølge Hopkins (2000) er "typical error" den gjennomsnittlige variasjonen ved en test. Typical error gir en indikasjon på den forventede variasjonen ved en retest. I dette tilfellet hvor vi ser på watt.max, kan en forvente at watt.max ved neste test vil variere med `r cv_perc` % [@Hopkins].

